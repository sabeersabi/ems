@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components

<MatAnchorUtils></MatAnchorUtils>
<MatAppBar Style="z-index: 80;"Class="mat">
    <MatAppBarRow>
        <MatAppBarSection>
            <MatIconButton Icon="menu" OnClick="@((e) => MenuButtonClicked())" ></MatIconButton>
            <MatHidden Breakpoint="@MatBreakpoint.XS" Direction="MatHiddenDirection.Down">
            <MatAppBarTitle>INVENTORY BIZ</MatAppBarTitle>
            </MatHidden>
            <MatHidden Breakpoint="@MatBreakpoint.SM" Direction="MatHiddenDirection.Up">
                <MatAppBarTitle>INVENTORY BIZ</MatAppBarTitle>
            </MatHidden>
        </MatAppBarSection>
        <MatAppBarSection Align="@MatAppBarSectionAlign.End">
            <MatIconButton Icon="favorite"></MatIconButton>
        </MatAppBarSection>
    </MatAppBarRow>
</MatAppBar>



<MatDrawerContainer Style="width: 100vw; height: 100vh;" Class="mat">

    <MatHidden Breakpoint="@MatBreakpoint.SM" Direction="@MatHiddenDirection.Up" 
    HiddenChanged="@ModelDrawerHiddenChanged">
          <ChildContent>
              <MatDrawer @bind-Opened="@_navMenuOpened" Mode="@MatDrawerMode.Modal">
                  <MatAppBarAdjust></MatAppBarAdjust>
                  <DemoDraweContent></DemoDraweContent>
              </MatDrawer>
          </ChildContent>
          <ElseContent>
              <MatDrawer @bind-Opened="@_navMenuOpened" Mode="@MatDrawerMode.Dismissible">
                  <MatAppBarAdjust></MatAppBarAdjust>
                  <DemoDraweContent></DemoDraweContent>
              </MatDrawer>
              
          </ElseContent>
    </MatHidden>

    <MatDrawerContent Class="mdc-theme--background">
        <MatAppBarAdjust></MatAppBarAdjust>
            <div class="body-wrapper" style="padding:30px">
                @Body
            </div>
    </MatDrawerContent>
</MatDrawerContainer>


@code{
    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    protected void ModelDrawerHiddenChanged(bool hidden)
    {
        if (!hidden)
        {
            _navMenuOpened = false;
        }
    }

    bool _navMenuOpened = true;
    void MenuButtonClicked()
    {
        _navMenuOpened = !_navMenuOpened;
        this.StateHasChanged();
    }
   

}